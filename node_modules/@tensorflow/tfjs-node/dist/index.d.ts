import * as nodeIo from './io/index';
export declare const version: {
    'tfjs-node': string;
    'tfjs-core': string;
    'tfjs-data': string;
    'tfjs-layers': string;
    'tfjs-converter': string;
    'tfjs': string;
};
export declare const io: {
    fileSystem: typeof nodeIo.fileSystem;
    nodeHTTPRequest: typeof nodeIo.nodeHTTPRequest;
    copyModel: typeof import("@tensorflow/tfjs-core/dist/io/model_management").copyModel;
    listModels: typeof import("@tensorflow/tfjs-core/dist/io/model_management").listModels;
    moveModel: typeof import("@tensorflow/tfjs-core/dist/io/model_management").moveModel;
    removeModel: typeof import("@tensorflow/tfjs-core/dist/io/model_management").removeModel;
    browserFiles: typeof import("@tensorflow/tfjs-core/dist/io/browser_files").browserFiles;
    browserHTTPRequest: typeof import("@tensorflow/tfjs-core/dist/io/browser_http").browserHTTPRequest;
    concatenateArrayBuffers: typeof import("@tensorflow/tfjs-core/dist/io/io_utils").concatenateArrayBuffers;
    decodeWeights: typeof import("@tensorflow/tfjs-core/dist/io/io_utils").decodeWeights;
    encodeWeights: typeof import("@tensorflow/tfjs-core/dist/io/io_utils").encodeWeights;
    fromMemory: typeof import("@tensorflow/tfjs-core/dist/io/passthrough").fromMemory;
    getLoadHandlers: typeof import("@tensorflow/tfjs-core/dist/io/router_registry").IORouterRegistry.getLoadHandlers;
    getModelArtifactsInfoForJSON: typeof import("@tensorflow/tfjs-core/dist/io/io_utils").getModelArtifactsInfoForJSON;
    getSaveHandlers: typeof import("@tensorflow/tfjs-core/dist/io/router_registry").IORouterRegistry.getSaveHandlers;
    isHTTPScheme: typeof import("@tensorflow/tfjs-core/dist/io/browser_http").isHTTPScheme;
    loadWeights: typeof import("@tensorflow/tfjs-core/dist/io/weights_loader").loadWeights;
    registerLoadRouter: typeof import("@tensorflow/tfjs-core/dist/io/router_registry").IORouterRegistry.registerLoadRouter;
    registerSaveRouter: typeof import("@tensorflow/tfjs-core/dist/io/router_registry").IORouterRegistry.registerSaveRouter;
    weightsLoaderFactory: typeof import("@tensorflow/tfjs-core/dist/io/weights_loader").weightsLoaderFactory;
    withSaveHandler: typeof import("@tensorflow/tfjs-core/dist/io/passthrough").withSaveHandler;
};
export * from '@tensorflow/tfjs';
